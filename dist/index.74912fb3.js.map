{"mappings":"AAAA,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;AAC7C,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AAE/C,IAAI,QAAQ,GAAG,CAAC,+1BA0ChB,CAAC,AAAC;AACF,IAAI,GAAG,GAAG,CAAC,AAAC;AACZ,IAAI,SAAS,GAAG,CAAC,CAAC,AAAC;AACnB,IAAI,IAAI,GAAG,GAAG,AAAC;AAEf,IAAI,MAAM,GAAG,IAAI;IACb,IAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,IAAI,EACrB,SAAS,IAAI,QAAQ,CAAC,GAAG,CAAC;SACxB,IAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,EAC1B,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC;SAEpB,SAAS,IAAI,QAAQ,CAAC;IAE1B,8BAA8B;IAC9B,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5B,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC9C,GAAG,EAAE,CAAC;IACN,KAAK,CAAC,QAAQ,CAAC;QACX,GAAG,EAAE,IAAI;QACT,QAAQ,EAAE,QAAQ;KAAC,CAAC,CAAC;IACzB,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,EACrB,IAAI,GAAG,EAAE,CAAC;IAEd,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,EACrB,IAAI,GAAG,GAAG,CAAC;IAEf,UAAU,CAAC,IAAM;QACb,GAAG,GAAG,QAAQ,CAAC,MAAM,GAAG,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACvD,cAAc;KACjB,EAAE,IAAI,CAAC,CAAC;CACZ;AAED,MAAM,EAAE","sources":["src/taiji.js"],"sourcesContent":["﻿let html1 = document.querySelector('#html1');\r\nlet style1 = document.querySelector('#style1');\r\n\r\nlet tjString = `\r\n/* 你好，我叫邱望\r\n * 接下来我要展示一下我的前端功底\r\n * 首先我要准备一个div\r\n */\r\n#div1{\r\n    border: 1px solid red;\r\n    width: 300px;\r\n    height: 300px;\r\n}\r\n/* 接下来我把div变成一个太极图\r\n * 请看\r\n * 我们首先需要一个圆\r\n */\r\n#div1{\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 3px rgba(0, 0, 0, 5);\r\n    border: none;\r\n}\r\n/* 太极分阴阳\r\n * 白为阳，黑为阴\r\n */\r\n#div1{\r\n    background: rgb(255,255,255);\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 阳中有阴\r\n * 阴中有阳\r\n * 阴阳互根\r\n */\r\n#div1::before{\r\n    top: 0;\r\n    background: rgb(255,255,255);\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%);\r\n    border-radius: 50%;\r\n}\r\n#div1::after{\r\n    bottom: 0;\r\n    background: rgb(0,0,0);\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%);\r\n    border-radius: 50%;\r\n}\r\n`;\r\nlet tjn = 0;\r\nlet tjString2 = ``;\r\nlet time = 100;\r\n\r\nlet tjStep = ()=>{\r\n    if(tjString[tjn] !== '\\n'){\r\n        tjString2 += tjString[tjn]\r\n    }else if(tjString[tjn] !== ' '){\r\n        tjString2 += `<br>`;\r\n    }else{\r\n        tjString2 += '&nbsp;';\r\n    }\r\n    //不是回车就照搬tjString2，是回车就转义。空格同理\r\n    html1.innerHTML = tjString2;\r\n    style1.innerHTML = tjString.substring(0, tjn);\r\n    tjn++;\r\n    html1.scrollTo({\r\n        top: 1000,\r\n        behavior: 'smooth'});\r\n    if (tjString[tjn] === '{') {\r\n        time = 10;\r\n    }\r\n    if (tjString[tjn] === '}') {\r\n        time = 100;\r\n    }\r\n    setTimeout(() => {\r\n        tjn < tjString.length ? tjStep() : console.log(`输出完毕`);\r\n        //tjn不是最后一个就继续\r\n    }, time);\r\n}\r\n\r\ntjStep()\r\n"],"names":[],"version":3,"file":"index.74912fb3.js.map","sourceRoot":"/__parcel_source_root/"}